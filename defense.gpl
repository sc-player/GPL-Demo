//Reserved Variables
string window_title="gpl_defense";
int window_height= 800;
int window_width= 640;
double window_red=0;
double window_blue=0;
double window_green=0;
int animation_speed= 60;

//Forward animations
//time
forward animation count(textbox tex);
//worker
forward animation workerwalk(pixmap worker);
forward animation repair(pixmap rep);
//skeleton
forward animation skelewalk(pixmap skele);
forward animation skeleatk(pixmap skel);
forward animation skeledeath(pixmap ske);
//grunt
forward animation gruntwalk(pixmap grunt);
forward animation gruntatk(pixmap grun);
//tower
forward animation toweratk(pixmap tow);
forward animation arrow(rectangle arr);
//catapult
forward animation catapultatk(pixmap cata);
forward animation projectile(circle sto);
forward animation explode(pixmap exp);
forward animation proj(pixmap pro);
forward animation bombexp(pixmap b);
//stop animating
forward animation none(rectangle no);
forward animation non(circle nono);
forward animation stop(pixmap stopped);

//Variables
//generic globals
int i=0;
int j=0;
int counter=0;
int currentmax=0;

//status variables
int gold=10;
int health=50;
int time=0;
int timecount=0;
int difficulty=0;
int killcount=0;

//background
pixmap background[460];

//ui
pixmap ui[44];
int uiBlockHeight =4;
pixmap goldIcon(filename="img/gold.bmp", x=32, y=32);
pixmap healthIcon(x=470, y=32, filename="img/health.bmp");
pixmap timeIcon(x=265, y=32, filename="img/time.bmp");
textbox goldBox(x=112, y=48, text=gold, size=.32, blue=1, green=1, red=1);
textbox healthBox(x=544, y=48, text=health, size=.32, blue=1, green=1, red=1);
textbox timeBox(x=340, y=48, text=time, size=.32, blue=1, green=1, red=1, animation_block=count);
textbox gameBox1(visible=0, x=150, y=664, text="GAME", size=.9, blue=0.0, green=0.0, red=1.0, drawing_order=10);
textbox gameBox2(visible=0, x=150, y=514, text="OVER", size=.9, blue=0.0, green=0.0, red=1.0, drawing_order=10);
textbox gameBox3(visible=0, x=150, y=364, text="KILLS:", size=.9, blue=0.0, green=0.0, red=1.0, drawing_order=10);
textbox gameBox4(visible=0, x=285, y=214, text=killcount, size=.9, blue=0.0, green=0.0, red=1.0, drawing_order=10);

//help
textbox helpBox(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=150, y=400, text="Welcome to hell, commander. A, S, D, and F");
textbox helpBox1(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=150, y=364, text="select towers. Up arrow builds, for 10 gold...");
textbox helpBox2(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=150, y=400, text="W builds a worker. Your first one is 10 gold,");
textbox helpBox3(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=150, y=364, text="then 30, then 50.");
textbox helpBox4(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=182, y=400, text="Select a tower and upgrade it by");
textbox helpBox5(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=182, y=364, text="pressing up, for 25 gold.");
textbox helpBox6(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=166, y=400, text="H, J, K, and L select your catapults.");
textbox helpBox7(drawing_order=9, visible=0, red=1.0, blue=0.0, green=0.0, x=166, y=364, text="Press up to build for 50 gold.");

//tower
int attacking;
pixmap tower[4];
rectangle arrows[8];
int pickedarrow=0;

//aiming calculation
double dx[8];
double dy[8];

//catapult
pixmap catapult[4];
circle stone[8];
int pickedstone=0;
pixmap exps[8];
int pickedexp=0;
pixmap seige[8];
pixmap bomb[80];

//selector
pixmap selector(user_int=0, visible=0, filename="img/selection.bmp", drawing_order=2);

//worker
pixmap workers[3];
int peasants;
int r=0;

//enemies
pixmap enemies[20];
int pickedenemy=0;
int target=0;

//initialization
initialization{
	//ui
	for(i=0; i<4; i+=1){
		ui[counter].x=0;
		ui[counter].y=i*32;
		ui[counter].filename="img/borderh.bmp";
		ui[counter].drawing_order=1;
		counter+=1;
		if((i==0)||(i==3)){
			for(j=1; j<19; j+=1){
				ui[counter].x=j*32;
				ui[counter].y=i*32;
				ui[counter].filename="img/borderh.bmp";
				ui[counter].drawing_order=1;
				counter+=1;
			}
		}
		ui[counter].x=608;
		ui[counter].y=i*32;
		ui[counter].drawing_order=1;
		ui[counter].filename="img/borderh.bmp";
		counter+=1;
	}
	//background
	for(i=0; i<23; i+=1){
		for(j=0; j<20; j+=1){
			background[i*20+j].x=j*32;
			background[i*20+j].y=i*32+32*uiBlockHeight;
			if(j<3 || j>16) {
				background[i*20+j].filename="img/tree middle.bmp";
			}
			if(j==3){
				background[i*20+j].filename="img/tree right.bmp";
			}
			if(j==16){
				background[i*20+j].filename="img/tree left.bmp";
			}
			if(j>3 && j<16){
				if(i==6){
					background[i*20+j].filename="img/wall.bmp";
				}
				if(i!=6){
					background[i*20+j].filename="img/ground.bmp";
				}
			}
		}
	}
	//game objects
	for(i=0; i<4; i+=1){
		tower[i].filename="img/tower.bmp";
		tower[i].x=152+i*96;
		tower[i].y=266;
		tower[i].user_int=0;
		tower[i].user_int2=12;
		tower[i].drawing_order=1;
		tower[i].visible=0;
		catapult[i].filename="img/catapult.bmp";
		catapult[i].x=152+i*96;
		catapult[i].y=172;
		catapult[i].drawing_order=1;
		catapult[i].visible=0;
		catapult[i].user_int=0;
		catapult[i].user_int2=20;
		if(i!=3){
			workers[i].filename="img/peasantwalk1.bmp";
			workers[i].visible=1;
			workers[i].x=210+100*i;
			workers[i].y=96;
			workers[i].drawing_order=1;
		}
	}
	//projectiles
	for(i=0; i<8; i+=1){
		stone[i].visible=0;
		stone[i].red=0.5;
		stone[i].blue=0.5;
		stone[i].green=0.5;
		stone[i].drawing_order=4;
		stone[i].radius=8;
		seige[i].filename="img/seige.bmp";
		seige[i].visible=0;
		seige[i].user_int=0;
		seige[i].user_int2=0;
		seige[i].user_int3=0;
		seige[i].drawing_order=4;
		arrows[i].user_int=0;
		arrows[i].visible=0;
		exps[i].user_int=0;
		exps[i].visible=0;
		exps[i].drawing_order=5;
	}
	for(i=0; i<80; i+=1){
		bomb[i].visible=0;
		bomb[i].drawing_order=3;
		bomb[i].filename="img/bomb1.bmp";
	}
	//enemies
	for(i=0; i<20; i+=1){
		enemies[i].visible=0;
	}
}

//Event Handlers
//tower selection
on akey{
	selector.x=140;
	selector.y=262;
	selector.user_int=0;
	selector.visible=1;
}

on skey{
	selector.x=236;
	selector.y=262;
	selector.user_int=1;
	selector.visible=1;
}

on dkey{
	selector.x=332;
	selector.y=262;
	selector.user_int=2;
	selector.visible=1;
}

on fkey{
	selector.x=428;
	selector.y=262;
	selector.user_int=3;
	selector.visible=1;
}

on hkey{
	selector.x=140;
	selector.y=168;
	selector.user_int=4;
	selector.visible=1;
}

on jkey{
	selector.x=236;
	selector.y=168;
	selector.user_int=5;
	selector.visible=1;
}

on kkey{
	selector.x=332;
	selector.y=168;
	selector.user_int=6;
	selector.visible=1;
}

on lkey{
	selector.x=428;
	selector.y=168;
	selector.user_int=7;
	selector.visible=1;
}

//create worker
on wkey{
	if((gold>=10+20*peasants)&&(peasants<3)){
		gold-=10+20*peasants;
		goldBox.text=gold;
		workers[peasants].user_int=0;
		workers[peasants].animation_block=workerwalk;
		peasants+=1;
	}
}

//create/upgrade tower
on uparrow{
	if(selector.user_int<4){
		if((tower[selector.user_int].user_int==0)&&(gold>9)){
			tower[selector.user_int].user_int=1;
			tower[selector.user_int].visible=1;
			tower[selector.user_int].animation_block=toweratk;
			gold-=10;
			goldBox.text=gold;
		}
		else{
			if((tower[selector.user_int].user_int==1)&&(gold>24)){
				tower[selector.user_int].user_int=2;
				tower[selector.user_int].filename="img/tower2.bmp";
				tower[selector.user_int].x-=4;
				tower[selector.user_int].y-=4;
				gold-=25;
				goldBox.text=gold;
			}
			else{
				if((tower[selector.user_int].user_int==2)&&(gold>74)){
					tower[selector.user_int].user_int=5;
					tower[selector.user_int].filename="img/tower3.bmp";
					tower[selector.user_int].x-=4;
					tower[selector.user_int].y-=4;
					gold-=75;
					goldBox.text=gold;
				}
			}
		}
	}
	else{
		if((catapult[selector.user_int-4].user_int==0)&&(gold>49)){
			catapult[selector.user_int-4].user_int=1;
			catapult[selector.user_int-4].visible=1;
			catapult[selector.user_int-4].animation_block=catapultatk;
			gold-=50;
			goldBox.text=gold;
		}
		else{
			if((catapult[selector.user_int-4].user_int==1)&&(gold>149)){
				catapult[selector.user_int-4].user_int=2;
				gold-=150;
				goldBox.text=gold;
			}
		}
	}
}

//Animation Blocks
//clock and spawning
animation count(textbox tex){
	timecount+=1;
	if(timecount==5){
		time+=1;
		tex.text=time;
		timecount=0;
	}
	if(difficulty<5){
		if((((time-30*difficulty)%(10-difficulty*2)==0)&&(time>0))&&(timecount==0)){
			for(i=0; i<20; i+=1){
				if((enemies[i].visible==0)&&(pickedenemy==0)){
					enemies[i].x=150+random(480-150);
					enemies[i].y=764;
					enemies[i].filename="img/skelewalk1.bmp";
					enemies[i].visible=1;
					enemies[i].drawing_order=1;
					enemies[i].animation_block=skelewalk;
					enemies[i].user_int=4;
					enemies[i].user_int2=0;
					enemies[i].user_int3=0;
					enemies[i].user_int5=0;
					pickedenemy=1;
					if(!attacking){
						attacking=1;
						target=i;
					}
				}
			}
			pickedenemy=0;
		}
	}
	if((difficulty>=5)&&(difficulty<13)){
		if((((time-30*difficulty)%(10-(difficulty-5))==0)&&(time>0))&&(timecount==0)){
			for(i=0; i<20; i+=1){
				if((enemies[i].visible==0)&&(pickedenemy==0)){
					enemies[i].x=150+random(480-150);
					enemies[i].y=764;
					enemies[i].filename="img/gruntwalk1.bmp";
					enemies[i].visible=1;
					enemies[i].drawing_order=1;
					enemies[i].animation_block=gruntwalk;
					enemies[i].user_int=14;
					enemies[i].user_int2=0;
					enemies[i].user_int3=1;
					enemies[i].user_int5=0;
					pickedenemy=1;
					if(!attacking){
						attacking=1;
						target=i;
					}
				}
			}
			pickedenemy=0;
		}
	}
	if((difficulty==13)&&(timecount==0)){
		for(i=0; i<20; i+=1){
			if((enemies[i].visible==0)&&(pickedenemy==0)){
				enemies[i].x=150+random(480-150);
				enemies[i].y=764;
				enemies[i].filename="img/skelewalk1.bmp";
				enemies[i].visible=1;
				enemies[i].drawing_order=1;
				enemies[i].animation_block=skelewalk;
				enemies[i].user_int=4;
				enemies[i].user_int2=0;
				enemies[i].user_int3=0;
				enemies[i].user_int5=0;
				pickedenemy=1;
				if(!attacking){
					attacking=1;
					target=i;
				}
			}
		}
		pickedenemy=0;
	}
	if((difficulty==14)&&(timecount%2)){
		for(i=0; i<20; i+=1){
			if((enemies[i].visible==0)&&(pickedenemy==0)){
				enemies[i].x=150+random(480-150);
				enemies[i].y=764;
				enemies[i].filename="img/skelewalk1.bmp";
				enemies[i].visible=1;
				enemies[i].drawing_order=1;
				enemies[i].animation_block=skelewalk;
				enemies[i].user_int=4;
				enemies[i].user_int2=0;
				enemies[i].user_int3=0;
				enemies[i].user_int5=0;
				pickedenemy=1;
				if(!attacking){
					attacking=1;
					target=i;
				}
			}
		}
		pickedenemy=0;
	}
	if((difficulty>=15)&&(timecount%2)){
		for(i=0; i<20; i+=1){
			if((enemies[i].visible==0)&&(pickedenemy==0)){
				enemies[i].x=150+random(480-150);
				enemies[i].y=764;
				if(random(2)){
					enemies[i].filename="img/gruntwalk1.bmp";
					enemies[i].user_int3=1;
					enemies[i].user_int=14;
					enemies[i].animation_block=gruntwalk;
				}
				else{
					enemies[i].filename="img/skeletonwalk1.bmp";
					enemies[i].animation_block=skelewalk;
					enemies[i].user_int=4;
					enemies[i].user_int3=0;
				}
				enemies[i].visible=1;
				enemies[i].drawing_order=1;
				enemies[i].user_int2=0;
				enemies[i].user_int5=0;
				pickedenemy=1;
				if(!attacking){
					attacking=1;
					target=i;
				}
			}
		}
		pickedenemy=0;
	}
	if((time%30==0)&&(time>0)&&(timecount==0)){
		difficulty+=1;
	}
	if(time==5){
		helpBox.visible=1;
		helpBox1.visible=1;
	}
	if(time==15){
		helpBox.visible=0;
		helpBox1.visible=0;
	}
	if(time==30){
		helpBox2.visible=1;
		helpBox3.visible=1;
	}
	if(time==40){
		helpBox2.visible=0;
		helpBox3.visible=0;
	}
	if(time==150){
		helpBox4.visible=1;
		helpBox5.visible=1;
	}
	if(time==160){
		helpBox4.visible=0;
		helpBox5.visible=0;
	}
	if(time==240){
		helpBox6.visible=1;
		helpBox7.visible=1;
	}
	if(time==250){
		helpBox6.visible=0;
		helpBox7.visible=0;
	}
	if(health<0){
		gameBox1.visible=1;
		gameBox2.visible=1;
		gameBox3.visible=1;
		gameBox4.text=killcount;
		gameBox4.visible=1;
	}
}

//worker
animation workerwalk(pixmap worker){
	worker.user_int+=1;
	if(worker.user_int>4){
		worker.user_int=0;
	}
	if(worker.user_int==0){
		worker.filename="img/peasantwalk1.bmp";
	}
	if(worker.user_int==1){
		worker.filename="img/peasantwalk2.bmp";
	}
	if(worker.user_int==2){
		worker.filename="img/peasantwalk3.bmp";
	}
	if(worker.user_int==3){
		worker.filename="img/peasantwalk4.bmp";
	}
	if(worker.user_int==4){
		worker.filename="img/peasantwalk5.bmp";
	}
	if(worker.y<300){
		worker.y=worker.y+12;
	}
	else{
		worker.user_int=0;
		worker.animation_block=repair;
	}
}

animation repair(pixmap rep){
	if(health<50){
		rep.user_int+=1;
		if(rep.user_int>4){
			rep.user_int=0;
		}
		if(rep.user_int==0){
			health+=1;
			healthBox.text=health;
			rep.filename="img/repair1.bmp";
		}
		if(rep.user_int==1){
			rep.filename="img/repair2.bmp";
		}
		if(rep.user_int==2){
			rep.filename="img/repair3.bmp";
		}
		if(rep.user_int==3){
			rep.filename="img/repair4.bmp";
		}
		if(rep.user_int==4){
			rep.filename="img/repair5.bmp";
		}
	}
	else{
		rep.user_int=0;
		rep.filename="img/peasantwalk1.bmp";
	}
}

//skeleton
animation skelewalk(pixmap skele){
	skele.user_int2+=1;
	if(skele.user_int2>4){
		skele.user_int2=0;
	}
	if(skele.user_int2==0){
		skele.filename="img/skelewalk1.bmp";
	}
	if(skele.user_int2==1){
		skele.filename="img/skelewalk2.bmp";
	}
	if(skele.user_int2==2){
		skele.filename="img/skelewalk3.bmp";
	}
	if(skele.user_int2==3){
		skele.filename="img/skelewalk4.bmp";
	}
	if(skele.user_int2==4){
		skele.filename="img/skelewalk5.bmp";
	}
	if(skele.y>352){
		skele.y=skele.y-5;
	}
	else{
		skele.user_int2=0;
		skele.animation_block=skeleatk;
	}
}

animation skeleatk(pixmap skel){
	skel.user_int2+=1;
	if(skel.user_int2>4){
		skel.user_int2=0;
	}
	if(skel.user_int2==0){
		skel.filename="img/skeleattack1.bmp";
	}
	if(skel.user_int2==1){
		skel.filename="img/skeleattack2.bmp";
	}
	if(skel.user_int2==2){
		skel.filename="img/skeleattack3.bmp";
		health-=1;
		healthBox.text=health;
	}
	if(skel.user_int2==3){
		skel.filename="img/skeleattack4.bmp";
	}
	if(skel.user_int2==4){
		skel.filename="img/skeleattack5.bmp";
	}
}

animation skeledeath(pixmap ske){
	if(ske.user_int2==0){
		ske.filename="img/skeledeath1.bmp";
	}
	if(ske.user_int2==1){
		ske.filename="img/skeledeath2.bmp";
	}
	if(ske.user_int2==2){
		ske.filename="img/skeledeath3.bmp";
	}
	if(ske.user_int2==3){
		ske.filename="img/skeledeath4.bmp";
	}
	if(ske.user_int2==4){
		ske.filename="img/skeledeath5.bmp";
	}
	if(ske.user_int2==5){
		ske.filename="img/skeledeath6.bmp";
	}
	if(ske.user_int2==6){
		ske.visible=0;
		ske.y=window_height+1;
		killcount+=1;
	}
	ske.user_int2+=1;
}

//grunt
animation gruntwalk(pixmap grunt){
	grunt.user_int2+=1;
	if(grunt.user_int2>4){
		grunt.user_int2=0;
	}
	if(grunt.user_int2==0){
		grunt.filename="img/gruntwalk1.bmp";
	}
	if(grunt.user_int2==1){
		grunt.filename="img/gruntwalk2.bmp";
	}
	if(grunt.user_int2==2){
		grunt.filename="img/gruntwalk3.bmp";
	}
	if(grunt.user_int2==3){
		grunt.filename="img/gruntwalk4.bmp";
	}
	if(grunt.user_int2==4){
		grunt.filename="img/gruntwalk5.bmp";
	}
	if(grunt.y>352){
		grunt.y=grunt.y-5;
	}
	else{
		grunt.user_int2=0;
		grunt.y-=8;
		grunt.animation_block=gruntatk;
	}
}

animation gruntatk(pixmap grun){
	grun.user_int2+=1;
	if(grun.user_int2>4){
		grun.user_int2=0;
		grun.y+=8;
	}
	if(grun.user_int2==0){
		grun.filename="img/gruntatk1.bmp";
	}
	if(grun.user_int2==1){
		grun.filename="img/gruntatk2.bmp";
	}
	if(grun.user_int2==2){
		grun.filename="img/gruntatk3.bmp";
	}
	if(grun.user_int2==3){
		grun.filename="img/gruntatk4.bmp";
	}
	if(grun.user_int2==4){
		grun.y-=8;
		grun.filename="img/gruntatk5.bmp";
		health-=2;
		healthBox.text=health;
	}
}

//tower
animation toweratk(pixmap tow){
	if(attacking&&(tow.user_int2<0)){
		for(i=0; i<8; i+=1){
			if((!arrows[i].visible)&&(!pickedarrow)){
				arrows[i].x=tow.x+28;
				arrows[i].y=tow.y+32;
				arrows[i].drawing_order=3;
				arrows[i].h=10+tow.user_int*5;
				arrows[i].w=2+tow.user_int;
				arrows[i].red=124.0/255.0;
				arrows[i].green=69.0/255.0;
				arrows[i].blue=15.0/255.0;
				arrows[i].user_int=tow.user_int;
				arrows[i].animation_block=arrow;
				arrows[i].visible=1;
				pickedarrow=1;
				arrows[i].user_int2=enemies[target].x-tow.x-8;
				arrows[i].user_int3=enemies[target].y-tow.y-25;
				arrows[i].user_double=sqrt(arrows[i].user_int2*arrows[i].user_int2+arrows[i].user_int3*arrows[i].user_int3);
				arrows[i].user_double2=24*arrows[i].user_int2/arrows[i].user_double;
				arrows[i].user_double3=24*arrows[i].user_int3/arrows[i].user_double;
				arrows[i].rotation=-asin(arrows[i].user_int2/arrows[i].user_double);
			}
		}
		pickedarrow=0;
		tow.user_int2=12;
	}
	else{
		tow.user_int2-=1;
	}
	if(!attacking){
		currentmax=window_height;
		for(i=0; i<20; i+=1){
			if(enemies[i].visible&&(enemies[i].y<currentmax)&&(enemies[i].user_int>0)){
				currentmax=enemies[i].y;
				target=i;
			}
		}
		currentmax=window_height;
	}
}

animation arrow(rectangle arr){
	arr.x+=floor(arr.user_double2);
	arr.y+=floor(arr.user_double3);
	if(arr.y>enemies[target].y+16){
		arr.visible=0;
		enemies[target].user_int=enemies[target].user_int-arr.user_int;
		if((enemies[target].user_int<=0)&&(!enemies[target].user_int5)){
			enemies[target].user_int5=1;
			if(enemies[target].user_int3==0){
				enemies[target].user_int2=0;
				enemies[target].animation_block=skeledeath;
				gold+=2;
				goldBox.text=gold;
			}
			if(enemies[target].user_int3==1){							
				enemies[target].user_int2=0;
				enemies[target].animation_block=skeledeath;
				gold+=5;
				goldBox.text=gold;
			}
			enemies[target].user_int5=1;
			currentmax=window_height;
			for(i=0; i<20; i+=1){
				if(enemies[i].visible&&(enemies[i].y<=currentmax)&&(enemies[i].user_int>0)){
					currentmax=enemies[i].y;
					target=i;
				}
			}
			if(currentmax==window_height){
				attacking=0;
			}
			currentmax=window_height;
		}
		arr.animation_block=none;
	}
}

//catapult
animation catapultatk(pixmap cata){
	if(cata.user_int2>3){
		cata.filename="catapult.bmp";
		cata.user_int2-=1;
	}
	else{
		if(attacking){
			if(cata.user_int2==0){
				cata.filename="img/catapult5.bmp";
				cata.user_int2=20;
				for(i=0; i<8; i+=1){
					if(cata.user_int==1){
						if((!stone[i].visible)&&(!pickedstone)){
							stone[i].x=cata.x+20;
							stone[i].y=cata.y+64;
							stone[i].user_int=cata.user_int;
							stone[i].user_int2=352+random(750-352);
							stone[i].visible=1;
							stone[i].animation_block=projectile;
							pickedstone=1;
						}
					}
					if(cata.user_int==2){
						if((!seige[i].visible)&&(!pickedstone)){
							seige[i].x=cata.x+12;
							seige[i].y=cata.y+8;
							seige[i].visible=1;
							seige[i].user_int=cata.user_int;
							seige[i].user_int2=352+random(750-352);
							seige[i].animation_block=proj;
							pickedstone=1;
						}
					}
				}
				pickedstone=0;
			}
			if(cata.user_int2==1){
				cata.filename="img/catapult4.bmp";
				cata.user_int2-=1;
			}
			if(cata.user_int2==2){
				cata.filename="img/catapult3.bmp";
				cata.user_int2-=1;
			}
			if(cata.user_int2==3){
				cata.filename="img/catapult2.bmp";
				cata.user_int2-=1;
			}
		}
	}
}

animation projectile(circle sto){
	sto.y+=16;
	if(sto.y>sto.user_int2){
		sto.visible=0;
		sto.animation_block=non;
		for(i=0; i<8; i+=1){
			if((!exps[i].visible)&&(!pickedexp)){
				exps[i].x=sto.x-24;
				exps[i].y=sto.y-24;
				exps[i].user_int2=0;
				exps[i].filename="img/exp1.bmp";
				exps[i].visible=1;
				exps[i].user_int=sto.user_int;
				exps[i].animation_block=explode;
				pickedexp=1;
			}
		}
		pickedexp=0;
	}
}

animation explode(pixmap exp){
	exp.user_int2+=1;
	if(exp.user_int2==1){
		exp.filename="img/exp2.bmp";
	}
	if(exp.user_int2==2){
		exp.filename="img/exp3.bmp";
	}
	if(exp.user_int2==3){
		exp.filename="img/exp4.bmp";
	}
	if(exp.user_int2==4){
		exp.filename="img/exp5.bmp";
	}
	if(exp.user_int2==5){
		exp.filename="img/exp6.bmp";
	}
	if(exp.user_int2==6){
		exp.visible=0;
	}
	for(i=0; i<20; i+=1){
		if((exp touches enemies[i])&&(enemies[i].user_int>0)){
			enemies[i].user_int-=exp.user_int;
			if(enemies[i].user_int<=0){
				if(enemies[i].user_int3==0){
				enemies[i].animation_block=skeledeath;
				gold+=2;
				goldBox.text=gold;
			}
			if(enemies[i].user_int3==1){
				enemies[i].animation_block=skeledeath;
				gold+=5;
				goldBox.text=gold;
			}
				if(i==target){
					enemies[target].user_int5=1;
					currentmax=window_height;
					for(i=0; i<20; i+=1){
						if(enemies[i].visible&&(enemies[i].y<=currentmax)&&(enemies[i].user_int>0)){
							currentmax=enemies[i].y;
							target=i;
						}
					}
					if(currentmax==window_height){
						attacking=0;
					}
					currentmax=window_height;
				}
			}
		}
	}
}

animation proj(pixmap pro){
	pro.y+=32;
	if(pro.y>=352+pro.user_int3*64){
		pro.user_int3+=1;
		for(i=0; i<80; i+=1){
			if((!bomb[i].visible)&&(!pickedexp)){
				print(i);
				bomb[i].x=pro.x-16;
				bomb[i].y=pro.y;
				bomb[i].visible=true;
				bomb[i].animation_block=bombexp;
				bomb[i].user_int=0;
				pickedexp=1;
			}
		}
		pickedexp=0;
	}
	if(pro.y>pro.user_int2){
		pro.visible=0;
		pro.user_int3=0;
		pro.animation_block=stop;
		for(i=0; i<8; i+=1){
			if((!exps[i].visible)&&(!pickedexp)){
				exps[i].x=pro.x-32;
				exps[i].y=pro.y-32;
				exps[i].user_int2=0;
				exps[i].filename="img/exp1.bmp";
				exps[i].visible=1;
				exps[i].user_int=pro.user_int;
				exps[i].animation_block=explode;
				pickedexp=1;
			}
		}
		pickedexp=0;
	}
}

animation bombexp(pixmap b){
	b.user_int+=1;
	if(b.user_int==1){
		b.filename="bomb2.bmp";
		for(i=0; i<20; i+=1){
			if((b touches enemies[i])&&(enemies[i].user_int>0)){
				enemies[i].user_int-=1;
				if(enemies[i].user_int<=0){
					if(enemies[i].user_int3==0){
					enemies[i].animation_block=skeledeath;
					gold+=2;
					goldBox.text=gold;
				}
				if(enemies[i].user_int3==1){
					enemies[i].animation_block=skeledeath;
					gold+=5;
					goldBox.text=gold;
				}
					if(i==target){
						enemies[target].user_int5=1;
						currentmax=window_height;
						for(i=0; i<20; i+=1){
							if(enemies[i].visible&&(enemies[i].y<=currentmax)&&(enemies[i].user_int>0)){
								currentmax=enemies[i].y;
								target=i;
							}
						}
						if(currentmax==window_height){
							attacking=0;
						}
						currentmax=window_height;
					}
				}
			}
		}
	}
	if(b.user_int==2){
		b.filename="img/bomb3.bmp";
	}
	if(b.user_int>2){
		b.visible=0;
	}
}

//stop animating
animation none(rectangle no){
}

animation non(circle nono){
}

animation stop(pixmap stopped){
}
